{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"RPushbullet: R interface to Pushbullet What is this? RPushbullet is an R client for the wonderful Pushbullet messaging / notification system. So what is Pushbullet? Pushbullet is an awesome (and free) little service that acts as a message broker. You sign up, and get a key to use the API. You then install the \"app\" on your smartphone or Chrome browser (and obtain a device id for of these). You can also query your account with the pbDevices() function to retrieve these ids. Presto. Now you can send messages between them by invoking pbPost() . Example With a resource file (see below) properly setup, you can just do something like the following R> msg # just an example, can be driven by real simulation results [1] \"DONE after 10000 simulations taking 42.43 minutes reducing RMSE by 7.89 percent\" R> R> RPushbullet::pbPost(\"note\", title=\"Simulation complete\", body=msg) and a message like the image following below should pop up (if messaging directed to the browser): Another excellent use case was suggested years ago by Karl Broman in this blog post . We can improve on his version a little as one no longer needs to load the package: options(error = function() { RPushbullet::pbPost(\"note\", \"Error\", geterrmessage()) if(!interactive()) stop(geterrmessage()) }) There was one noteworthy follow-up for which I lost the source: it suggested to make the message somewhat saltier by relying on the helpful rfoaas package. Package Status The package is reasonably mature and functional. Up until release 0.2.0, an external curl binary was used. We have since switched to using the curl package. Given that the Pushbullet API has other nice features, future extensions are certainly possible and encouraged. Interested contributors should file issue tickets first to discuss before going off on pull requests. Initialization A file ~/.rpushbullet.json can be used to pass the API key and device identifiers to the package. The content is read upon package startup, and stored in a package-local environment. The format of this file is as follows: { \"key\": \"...placey your api key here...\", \"devices\": [ \".....device 1 id......\", \".....device 2 id......\", \".....device 3 id......\" ], \"names\": [ \"...name1...\", \"...name2...\", \"...name3...\" ], \"defaultdevice\": \"...nameOfYourDefault...\" } The names and defaultdevice fields are optional. See the main package help page for more details. You can also create the file programmatically via cat(jsonlite::toJSON(list(key=\"..key here..\", devices=c(\"..aa..\", \"..bb..\")))) and write that content to the file ~/.rpushbullet.json . Starting with release 0.3.0, a new helper function pbSetup() is also available to create the file. You can also retrieve the ids of your devices with the pbGetDevices() function by calling, say, str(fromJSON(pbGetDevices())) . Note that you need to load one of the packages RJSONIO or rjson or jsonlite to access the fromJSON() function. Channels Pushbullet has recently added channels to their API. These are notification feeds that user can subscribe to, and which allows the developer to create (per-topic) channels for various applications / topics that her users can subscribe to. Creating a channel is easy: one simply needs to login and visit the My Channel page. From there, one can easily create a new channel by clicking the \"add channel\" button. There will be a prompt to enter a 'tag', a channel name, as well as a description. The channel_tag is what is needed to push posts to the channel. Currently, only the owner of a channel has permissions to post to that channel, so one will need to create the channel using the same login one has specified in ~/.rpushbullet.json in order to use RPushbullet to post to a channel. Channels are public : Anyone who knows the channel 'tag' can subscribe and will therefore receive all messages pushed to that channel. Some users create hard-to-guess channel tags to achieve semi privacy. This works because it is, currently as of February 2015, neither possible to list the channels owned by a specific user nor possible to browse or search for other users' channels. One method to generate a hard-to-guess tag is digest::digest(rnorm(1)) . Channels can be used by passing a channel argument to the pbPost function. The Pushbullet API identifies a channel via the supplied channel_tag value of this argument. See the Pushes API documentation for more information. Author Dirk Eddelbuettel with contributions by Bill Evans, Mike Birdgeneau, Henrik Bengtsson, Seth Wenchel, Colin Gillespie and Chan-Yub Park. License GPL (>= 2)","title":"Index"},{"location":"#rpushbullet-r-interface-to-pushbullet","text":"","title":"RPushbullet: R interface to Pushbullet"},{"location":"#what-is-this","text":"RPushbullet is an R client for the wonderful Pushbullet messaging / notification system.","title":"What is this?"},{"location":"#so-what-is-pushbullet","text":"Pushbullet is an awesome (and free) little service that acts as a message broker. You sign up, and get a key to use the API. You then install the \"app\" on your smartphone or Chrome browser (and obtain a device id for of these). You can also query your account with the pbDevices() function to retrieve these ids. Presto. Now you can send messages between them by invoking pbPost() .","title":"So what is Pushbullet?"},{"location":"#example","text":"With a resource file (see below) properly setup, you can just do something like the following R> msg # just an example, can be driven by real simulation results [1] \"DONE after 10000 simulations taking 42.43 minutes reducing RMSE by 7.89 percent\" R> R> RPushbullet::pbPost(\"note\", title=\"Simulation complete\", body=msg) and a message like the image following below should pop up (if messaging directed to the browser): Another excellent use case was suggested years ago by Karl Broman in this blog post . We can improve on his version a little as one no longer needs to load the package: options(error = function() { RPushbullet::pbPost(\"note\", \"Error\", geterrmessage()) if(!interactive()) stop(geterrmessage()) }) There was one noteworthy follow-up for which I lost the source: it suggested to make the message somewhat saltier by relying on the helpful rfoaas package.","title":"Example"},{"location":"#package-status","text":"The package is reasonably mature and functional. Up until release 0.2.0, an external curl binary was used. We have since switched to using the curl package. Given that the Pushbullet API has other nice features, future extensions are certainly possible and encouraged. Interested contributors should file issue tickets first to discuss before going off on pull requests.","title":"Package Status"},{"location":"#initialization","text":"A file ~/.rpushbullet.json can be used to pass the API key and device identifiers to the package. The content is read upon package startup, and stored in a package-local environment. The format of this file is as follows: { \"key\": \"...placey your api key here...\", \"devices\": [ \".....device 1 id......\", \".....device 2 id......\", \".....device 3 id......\" ], \"names\": [ \"...name1...\", \"...name2...\", \"...name3...\" ], \"defaultdevice\": \"...nameOfYourDefault...\" } The names and defaultdevice fields are optional. See the main package help page for more details. You can also create the file programmatically via cat(jsonlite::toJSON(list(key=\"..key here..\", devices=c(\"..aa..\", \"..bb..\")))) and write that content to the file ~/.rpushbullet.json . Starting with release 0.3.0, a new helper function pbSetup() is also available to create the file. You can also retrieve the ids of your devices with the pbGetDevices() function by calling, say, str(fromJSON(pbGetDevices())) . Note that you need to load one of the packages RJSONIO or rjson or jsonlite to access the fromJSON() function.","title":"Initialization"},{"location":"#channels","text":"Pushbullet has recently added channels to their API. These are notification feeds that user can subscribe to, and which allows the developer to create (per-topic) channels for various applications / topics that her users can subscribe to. Creating a channel is easy: one simply needs to login and visit the My Channel page. From there, one can easily create a new channel by clicking the \"add channel\" button. There will be a prompt to enter a 'tag', a channel name, as well as a description. The channel_tag is what is needed to push posts to the channel. Currently, only the owner of a channel has permissions to post to that channel, so one will need to create the channel using the same login one has specified in ~/.rpushbullet.json in order to use RPushbullet to post to a channel. Channels are public : Anyone who knows the channel 'tag' can subscribe and will therefore receive all messages pushed to that channel. Some users create hard-to-guess channel tags to achieve semi privacy. This works because it is, currently as of February 2015, neither possible to list the channels owned by a specific user nor possible to browse or search for other users' channels. One method to generate a hard-to-guess tag is digest::digest(rnorm(1)) . Channels can be used by passing a channel argument to the pbPost function. The Pushbullet API identifies a channel via the supplied channel_tag value of this argument. See the Pushes API documentation for more information.","title":"Channels"},{"location":"#author","text":"Dirk Eddelbuettel with contributions by Bill Evans, Mike Birdgeneau, Henrik Bengtsson, Seth Wenchel, Colin Gillespie and Chan-Yub Park.","title":"Author"},{"location":"#license","text":"GPL (>= 2)","title":"License"},{"location":"changelog/","text":"2021 2021-02-27 Dirk Eddelbuettel edd@debian.org * .github/workflows/ci.yaml: Added run.sh from r-ci * .Rbuildignore: Added .github * .travis.yml: Minor edit * .rpushbullet.json.gpg: New gpg-encrypted tokenfile * .github/scripts/decrypt_tokenfile.sh: Added helper to decrypt * .github/workflows/ci.yaml: Use helper and token via secret 2020 2020-06-14 Dirk Eddelbuettel edd@debian.org * .travis.yml (sudo): Switch to 'bionic' and R 4.0.0; set TRAVIS_SECURE_ENV_VARS=\"true\", condition coverage 2020-06-13 Dirk Eddelbuettel edd@debian.org * DESCRIPTION (Version, Date): Roll minor version * tests/simpleTests.R: Add tests for .checkReturnCode 2020-06-13 Thomas Shafer thomasjshafer@gmail.com * R/init.R (.checkReturnCode): Refactored error code check 2020-04-11 Dirk Eddelbuettel edd@debian.org * README.md: Added 'last commit' badge, small edits 2020-01-18 Dirk Eddelbuettel edd@debian.org * DESCRIPTION (Version, Date): Release 0.3.3 2020-01-12 Dirk Eddelbuettel edd@debian.org * DESCRIPTION (Version, Date): Roll minor version * R/init.R (.getCurlHandle): Setting HTTP/1.1 is now conditional on a new option \"rpushbullet.useHTTP11\" being set to TRUE * R/pushes.R: Document new option * man/pbPost.Rd: Idem 2020-01-06 Alexandre Shannon alexandre.shannon@gmail.com * R/init.R: Use curl::handle_setopt to set HTTP/1.1 2019 2019-07-21 Chan-Yub Park mrchypark@gmail.com * R/pushes.R: Set UTF-8 encoding in pbGetPosts 2019-07-21 Dirk Eddelbuettel edd@debian.org * DESCRIPTION (Version, Date): Release 0.3.2 * README.md: Add dependencies badge 2019-07-20 Dirk Eddelbuettel edd@debian.org * DESCRIPTION: Expand authors / contributors list * README.md: Idem * R/setup.R: One more #nocov tag 2019-07-19 Dirk Eddelbuettel edd@debian.org * R/setup.R: A few more #nocov tags 2019-07-18 Dirk Eddelbuettel edd@debian.org * DESCRIPTION (Version, Date): Roll minor version * R/init.R: Added #nocov tags * R/pushes.R: Renamed to pbGetPosts, added #nocov tags * man/pbGetPosts.Rd: Renamed 2019-07-17 Chan-Yub Park mrchypark@gmail.com * R/pushes.R: Add pbGetPost function, modify .createPush * man/pbGetPost.Rd: Updated documentation 2019-07-11 Colin Gillespie colin@jumpingrivers.com * R/setup.R (pbSetup): Read conffile after pbSetup * .gitignore: Ignore .rpushbullet.json 2017 2017-11-02 Colin Gillespie colin@jumpingrivers.com * R/setup.R: Set conffile to be readable only by the user 2017-04-13 Dirk Eddelbuettel edd@debian.org * .travis.yml (env): Condition tests on having env.vars which PRs from forks will not have to not expose the secret token * R/setup.R (pbSetup): Typo/spelling fix suggested by Michael Chirico 2017-02-17 Dirk Eddelbuettel edd@debian.org * DESCRIPTION (Version, Date): Release 0.3.1 * R/user.R: Do not run example * man/pbGetUser.Rd: Idem 2017-02-14 Dirk Eddelbuettel edd@debian.org * R/init.R: Additional #nocov tags * R/isValid.R: Idem * R/pushes.R: Idem * R/setup.R: Idem * tests/simpleTests.R: Added calls to pbGetUser() etc 2017-02-11 Dirk Eddelbuettel edd@debian.org * .rpushbullet.json.enc: Encoded configuration * .travis.yml: Decode configuration and run tests and coverage * R/setup.R (pbSetup): Support an optional default device * man/pbSetup.Rd: Documentation * tests/simpleTests.R: More calls to game test coverage statistics 2017-02-10 Seth S. Wenchel wenchel@gmail.com * R/channel.R: Added S3 class pbChannelInfo with default, print, and summary methods * R/user.R: Added S3 class pbUser with default, print and summary methods * R/setup.R: New function pbValidateConf * R/isValid.R: Added missing header 2017-02-08 Seth S. Wenchel wenchel@gmail.com * R/devices.R: Fix for another RJSONIO / jsonlite transition 2017-02-06 Seth S. Wenchel wenchel@gmail.com * R/isValid.R: New (unexported) helper functions .isValidLey, .isValidDevice, .isValidChannel 2017-02-04 Dirk Eddelbuettel edd@max.eddelbuettel.com * DESCRIPTION (Version, Date): Roll minor version * R/pushes.R (pbPost): Correct target device designation * attic/pbpost.r (localPbPost): Test script by Seth, slight mod'ed 2017-02-03 Dirk Eddelbuettel edd@debian.org * DESCRIPTION (Version, Date): Release 0.3.0 2017-02-02 Dirk Eddelbuettel edd@debian.org * R/pushes.R (pbPost): Use 'target_device_ind', not 'device_ind' * R/setup.R (pbSetup): Use 'pretty=TRUE' for nicer output * man/pbPost.Rd: Remove reference to unsupported type 'address' * man/rpushbullet-package.Rd: Idem * tests/simpleTests.R: Changed to be less agressive and run failing tests only if environment variable Run_RPushbullet_Tests_All is 'yes' * README.md: Updated and expanded 2017-02-01 Seth S. Wenchel wenchel@gmail.com * R/setup.R: Write single elements as vectors instead of lists 2017-01-31 Dirk Eddelbuettel edd@debian.org * README.md: Minor edits, more canonical URLs * .travis.yml: Use https for curl download 2017-01-30 Dirk Eddelbuettel edd@debian.org * DESCRIPTION (Version, Date): New minor version and date 2017-01-30 Seth S. Wenchel wenchel@gmail.com * R/setup.R (pbSetup): Check return code from pbGetDevices(); flag an error if no device is associated with the supplied key; fixed typo * R/init.R (.checkReturnCode): Move function here 2017-01-28 Dirk Eddelbuettel edd@debian.org * R/setup.R (pbSetup): New function, extending PR by Seth Wenchel * R/init.R (.onLoad): Also load dotfile, permitted use for un-attached package (.onAttach): Improved message formatting, simpler environment use (.getDotfile): New helper for default dotfile (.parseResourceFile): Simpler environment use * .travis.yml: Switch to using run.sh for Travis CI * NAMESPACE: Minor edit * inst/NEWS: Updated 2017-01-27 Seth S. Wenchel wenchel@gmail.com * R/init.R: Refactored to use jsonlite instead of RJSONIO * R/pushes.R: Idem * DESCRIPTION: Idem * NAMESPACE: Idem * .travis.yml: Idem 2017-01-27 Dirk Eddelbuettel edd@debian.org * README.md: Removed broken URLs to Pushbullet docs, mention Mike and Seth in Authors, and add coverage badge 2017-01-26 Dirk Eddelbuettel edd@debian.org * DESCRIPTION (Version, Date): Rolled minor version and date * NAMESPACE: Also import str()importFrom(\"utils\", \"str\") * man/pbPost.Rd: Updated documentation * R/pushes.R: Updated copyright 2017-01-23 Seth S. Wenchel wenchel@gmail.com * R/devices.R: Refactored and extended to use the curl package instead the external curl binary; also removed no-longer supported 'address' pushes * R/init.R: Idem * R/pushes.R: Idem * DESCRIPTION: Idem * NAMESPACE: Idem * .travis.yml: Idem * tests/simpleTests.R: Updated and added channel tests 2015 2015-06-20 Dirk Eddelbuettel edd@debian.org * man/rpushbullet-package.Rd: Document that package initializes when being attached, making package load the recommened usage pattern. 2015-02-09 Dirk Eddelbuettel edd@debian.org * DESCRIPTION: Version 0.2.0 * DESCRIPTION (Description): Some minor last minute changes 2015-02-08 Dirk Eddelbuettel edd@debian.org * inst/NEWS.Rd: Added * tests/simpleTests.R (testfile): Fix wrong case in package name 2015-02-04 Dirk Eddelbuettel edd@debian.org * R/init.R (.parseResourceFile): Split off functionality from .onAttach(), permitting later call by user if needed * R/init.R (.onAttach): Call .parseResourceFile() 2015-02-04 Henrik Bengtsson hb@biostat.ucsf.edu * R/init.R (.onAttach): Warn on non-existing key * README.md: Typo fixes, added note that channels are public * NAMESPACE: Export S3 methods * tests/simpleTests.R: Internal improvements and typo fixes 2015-01-20 Dirk Eddelbuettel edd@debian.org * R/pushes.R: Some improvements to logic and use of test variables 2015-01-19 Dirk Eddelbuettel edd@debian.org * R/init.R: Support option testemail and testchannel * DESCRIPTION: Bump Version: and Date: 2015-01-18 Mike Birdgeneau mike.birdgeneau@gmail.com * R/pushes.R (pbPost): Support for channels * tests/simpleTests.R: Added tests for channels 2014 2014-12-30 Dirk Eddelbuettel edd@debian.org * tests/simpleTests.R: A few minor edits 2014-12-29 Mike Birdgeneau mike.birdgeneau@gmail.com * R/pushes.R: Corrections to file transfer mode * tests/simpleTests.R: Added more tests 2014-11-03 Dirk Eddelbuettel edd@debian.org * DESCRIPTION: Version 0.1.1 * DESCRIPTION: Updated the text in Description: 2014-11-02 Dirk Eddelbuettel edd@debian.org * R/pushes.R: Correct file upload method * R/init.R: Protect filename by spaces 2014-10-10 Dirk Eddelbuettel edd@debian.org * DESCRIPTION: Version 0.1.0 2014-10-09 Dirk Eddelbuettel edd@debian.org * man/rpushbullet-package.Rd: Added a new section on intialization detailing how api key, device key(s) and name(s) and defaultdevice can be specified via a dotfile, options or function arguments. * R/pushes.R: Minor correction 2014-10-08 Dirk Eddelbuettel edd@debian.org * R/pushes.R: New (optional) argument 'email' in pbPost * man/pbPost.Rd: Corresponding manual page updates 2014-10-06 Dirk Eddelbuettel edd@debian.org * R/pushes.R: Minor typo correction by Mike Birdgeneau * R/pushes.R: Made file operations silent, minor tweak to docs * R/init.R: Made file operations silent * R/init.R: Also set 'names' option from init file * tests/simpleTests.R: Added two examples for type='link' and type='file' 2014-09-10 Dirk Eddelbuettel edd@debian.org * R/pushes.R: Documentation clarified for 'recipient' option 2014-06-15 Dirk Eddelbuettel edd@debian.org * R/pushes.R: Applied pull request #7 by Mike Birdgeneau which implements pushes of type 'file' * R/init.R: Ditto * R/pushes: Minor postprocessing of pull request * R/init.R: Ditto 2014-06-10 Dirk Eddelbuettel edd@debian.org * R/pushes.R: Rewritten in terms of new argument 'recipients' with the default being sent to all devices; old argument 'deviceind' now deprecated. * R/init.R: New internal helper function .getNames() * R/init.R: The .getDefaultDevice() now defaults to 'zero' implying all devices should be used. 2014-06-07 Dirk Eddelbuettel edd@debian.org * R/devices.R: pgGetDevices() converted to an S3 object with proper print and summary methods for the returned class 'pbDevices' 2014-06-06 Dirk Eddelbuettel edd@debian.org * R/init.R: Applied pull request #3 by Bill Evans * R/push.R: Ditto * R/init.R: Minor tweak using 'defaultdevice' * R/push.R: Ditto 2014-06-05 Dirk Eddelbuettel edd@debian.org * R/init.R: Fixed two more references to pushbutton which should of course have been pushbullet * R/pushes.R: And another one here 2014-06-02 Dirk Eddelbuettel edd@debian.org * DESCRIPTION: Version 0.0.2 * R/init.R: Detect curl binary in PATH at startup * R/pushes.R: Use curl binary identified at startup * R/devices.R: Ditto * .Rbuildignore: Add attic/ directory with file configure and configure.ac which is no longer needed at init.R checks for curl * R/init.R: Package environment is now .pkgenv * tests/simpleTests.R: Ditto 2014-05-27 Dirk Eddelbuettel edd@debian.org * R/pushes.R (pbPost): Added new optional argument 'debug', and minor refactoring in pbPost() making url string a common variable 2014-05-25 Dirk Eddelbuettel edd@debian.org * configure.ac: Added with simple test for curl * configure: Idem * tests/simpleTests.R: Added simple test script * R/init.R: Improved init. with new helper functions 2014-05-24 Dirk Eddelbuettel edd@debian.org * DESCRIPTION: Initial commit as version 0.0.1 * .travis.yml: Added Travis support","title":"Changelog"},{"location":"changelog/#2021","text":"2021-02-27 Dirk Eddelbuettel edd@debian.org * .github/workflows/ci.yaml: Added run.sh from r-ci * .Rbuildignore: Added .github * .travis.yml: Minor edit * .rpushbullet.json.gpg: New gpg-encrypted tokenfile * .github/scripts/decrypt_tokenfile.sh: Added helper to decrypt * .github/workflows/ci.yaml: Use helper and token via secret","title":"2021"},{"location":"changelog/#2020","text":"2020-06-14 Dirk Eddelbuettel edd@debian.org * .travis.yml (sudo): Switch to 'bionic' and R 4.0.0; set TRAVIS_SECURE_ENV_VARS=\"true\", condition coverage 2020-06-13 Dirk Eddelbuettel edd@debian.org * DESCRIPTION (Version, Date): Roll minor version * tests/simpleTests.R: Add tests for .checkReturnCode 2020-06-13 Thomas Shafer thomasjshafer@gmail.com * R/init.R (.checkReturnCode): Refactored error code check 2020-04-11 Dirk Eddelbuettel edd@debian.org * README.md: Added 'last commit' badge, small edits 2020-01-18 Dirk Eddelbuettel edd@debian.org * DESCRIPTION (Version, Date): Release 0.3.3 2020-01-12 Dirk Eddelbuettel edd@debian.org * DESCRIPTION (Version, Date): Roll minor version * R/init.R (.getCurlHandle): Setting HTTP/1.1 is now conditional on a new option \"rpushbullet.useHTTP11\" being set to TRUE * R/pushes.R: Document new option * man/pbPost.Rd: Idem 2020-01-06 Alexandre Shannon alexandre.shannon@gmail.com * R/init.R: Use curl::handle_setopt to set HTTP/1.1","title":"2020"},{"location":"changelog/#2019","text":"2019-07-21 Chan-Yub Park mrchypark@gmail.com * R/pushes.R: Set UTF-8 encoding in pbGetPosts 2019-07-21 Dirk Eddelbuettel edd@debian.org * DESCRIPTION (Version, Date): Release 0.3.2 * README.md: Add dependencies badge 2019-07-20 Dirk Eddelbuettel edd@debian.org * DESCRIPTION: Expand authors / contributors list * README.md: Idem * R/setup.R: One more #nocov tag 2019-07-19 Dirk Eddelbuettel edd@debian.org * R/setup.R: A few more #nocov tags 2019-07-18 Dirk Eddelbuettel edd@debian.org * DESCRIPTION (Version, Date): Roll minor version * R/init.R: Added #nocov tags * R/pushes.R: Renamed to pbGetPosts, added #nocov tags * man/pbGetPosts.Rd: Renamed 2019-07-17 Chan-Yub Park mrchypark@gmail.com * R/pushes.R: Add pbGetPost function, modify .createPush * man/pbGetPost.Rd: Updated documentation 2019-07-11 Colin Gillespie colin@jumpingrivers.com * R/setup.R (pbSetup): Read conffile after pbSetup * .gitignore: Ignore .rpushbullet.json","title":"2019"},{"location":"changelog/#2017","text":"2017-11-02 Colin Gillespie colin@jumpingrivers.com * R/setup.R: Set conffile to be readable only by the user 2017-04-13 Dirk Eddelbuettel edd@debian.org * .travis.yml (env): Condition tests on having env.vars which PRs from forks will not have to not expose the secret token * R/setup.R (pbSetup): Typo/spelling fix suggested by Michael Chirico 2017-02-17 Dirk Eddelbuettel edd@debian.org * DESCRIPTION (Version, Date): Release 0.3.1 * R/user.R: Do not run example * man/pbGetUser.Rd: Idem 2017-02-14 Dirk Eddelbuettel edd@debian.org * R/init.R: Additional #nocov tags * R/isValid.R: Idem * R/pushes.R: Idem * R/setup.R: Idem * tests/simpleTests.R: Added calls to pbGetUser() etc 2017-02-11 Dirk Eddelbuettel edd@debian.org * .rpushbullet.json.enc: Encoded configuration * .travis.yml: Decode configuration and run tests and coverage * R/setup.R (pbSetup): Support an optional default device * man/pbSetup.Rd: Documentation * tests/simpleTests.R: More calls to game test coverage statistics 2017-02-10 Seth S. Wenchel wenchel@gmail.com * R/channel.R: Added S3 class pbChannelInfo with default, print, and summary methods * R/user.R: Added S3 class pbUser with default, print and summary methods * R/setup.R: New function pbValidateConf * R/isValid.R: Added missing header 2017-02-08 Seth S. Wenchel wenchel@gmail.com * R/devices.R: Fix for another RJSONIO / jsonlite transition 2017-02-06 Seth S. Wenchel wenchel@gmail.com * R/isValid.R: New (unexported) helper functions .isValidLey, .isValidDevice, .isValidChannel 2017-02-04 Dirk Eddelbuettel edd@max.eddelbuettel.com * DESCRIPTION (Version, Date): Roll minor version * R/pushes.R (pbPost): Correct target device designation * attic/pbpost.r (localPbPost): Test script by Seth, slight mod'ed 2017-02-03 Dirk Eddelbuettel edd@debian.org * DESCRIPTION (Version, Date): Release 0.3.0 2017-02-02 Dirk Eddelbuettel edd@debian.org * R/pushes.R (pbPost): Use 'target_device_ind', not 'device_ind' * R/setup.R (pbSetup): Use 'pretty=TRUE' for nicer output * man/pbPost.Rd: Remove reference to unsupported type 'address' * man/rpushbullet-package.Rd: Idem * tests/simpleTests.R: Changed to be less agressive and run failing tests only if environment variable Run_RPushbullet_Tests_All is 'yes' * README.md: Updated and expanded 2017-02-01 Seth S. Wenchel wenchel@gmail.com * R/setup.R: Write single elements as vectors instead of lists 2017-01-31 Dirk Eddelbuettel edd@debian.org * README.md: Minor edits, more canonical URLs * .travis.yml: Use https for curl download 2017-01-30 Dirk Eddelbuettel edd@debian.org * DESCRIPTION (Version, Date): New minor version and date 2017-01-30 Seth S. Wenchel wenchel@gmail.com * R/setup.R (pbSetup): Check return code from pbGetDevices(); flag an error if no device is associated with the supplied key; fixed typo * R/init.R (.checkReturnCode): Move function here 2017-01-28 Dirk Eddelbuettel edd@debian.org * R/setup.R (pbSetup): New function, extending PR by Seth Wenchel * R/init.R (.onLoad): Also load dotfile, permitted use for un-attached package (.onAttach): Improved message formatting, simpler environment use (.getDotfile): New helper for default dotfile (.parseResourceFile): Simpler environment use * .travis.yml: Switch to using run.sh for Travis CI * NAMESPACE: Minor edit * inst/NEWS: Updated 2017-01-27 Seth S. Wenchel wenchel@gmail.com * R/init.R: Refactored to use jsonlite instead of RJSONIO * R/pushes.R: Idem * DESCRIPTION: Idem * NAMESPACE: Idem * .travis.yml: Idem 2017-01-27 Dirk Eddelbuettel edd@debian.org * README.md: Removed broken URLs to Pushbullet docs, mention Mike and Seth in Authors, and add coverage badge 2017-01-26 Dirk Eddelbuettel edd@debian.org * DESCRIPTION (Version, Date): Rolled minor version and date * NAMESPACE: Also import str()importFrom(\"utils\", \"str\") * man/pbPost.Rd: Updated documentation * R/pushes.R: Updated copyright 2017-01-23 Seth S. Wenchel wenchel@gmail.com * R/devices.R: Refactored and extended to use the curl package instead the external curl binary; also removed no-longer supported 'address' pushes * R/init.R: Idem * R/pushes.R: Idem * DESCRIPTION: Idem * NAMESPACE: Idem * .travis.yml: Idem * tests/simpleTests.R: Updated and added channel tests","title":"2017"},{"location":"changelog/#2015","text":"2015-06-20 Dirk Eddelbuettel edd@debian.org * man/rpushbullet-package.Rd: Document that package initializes when being attached, making package load the recommened usage pattern. 2015-02-09 Dirk Eddelbuettel edd@debian.org * DESCRIPTION: Version 0.2.0 * DESCRIPTION (Description): Some minor last minute changes 2015-02-08 Dirk Eddelbuettel edd@debian.org * inst/NEWS.Rd: Added * tests/simpleTests.R (testfile): Fix wrong case in package name 2015-02-04 Dirk Eddelbuettel edd@debian.org * R/init.R (.parseResourceFile): Split off functionality from .onAttach(), permitting later call by user if needed * R/init.R (.onAttach): Call .parseResourceFile() 2015-02-04 Henrik Bengtsson hb@biostat.ucsf.edu * R/init.R (.onAttach): Warn on non-existing key * README.md: Typo fixes, added note that channels are public * NAMESPACE: Export S3 methods * tests/simpleTests.R: Internal improvements and typo fixes 2015-01-20 Dirk Eddelbuettel edd@debian.org * R/pushes.R: Some improvements to logic and use of test variables 2015-01-19 Dirk Eddelbuettel edd@debian.org * R/init.R: Support option testemail and testchannel * DESCRIPTION: Bump Version: and Date: 2015-01-18 Mike Birdgeneau mike.birdgeneau@gmail.com * R/pushes.R (pbPost): Support for channels * tests/simpleTests.R: Added tests for channels","title":"2015"},{"location":"changelog/#2014","text":"2014-12-30 Dirk Eddelbuettel edd@debian.org * tests/simpleTests.R: A few minor edits 2014-12-29 Mike Birdgeneau mike.birdgeneau@gmail.com * R/pushes.R: Corrections to file transfer mode * tests/simpleTests.R: Added more tests 2014-11-03 Dirk Eddelbuettel edd@debian.org * DESCRIPTION: Version 0.1.1 * DESCRIPTION: Updated the text in Description: 2014-11-02 Dirk Eddelbuettel edd@debian.org * R/pushes.R: Correct file upload method * R/init.R: Protect filename by spaces 2014-10-10 Dirk Eddelbuettel edd@debian.org * DESCRIPTION: Version 0.1.0 2014-10-09 Dirk Eddelbuettel edd@debian.org * man/rpushbullet-package.Rd: Added a new section on intialization detailing how api key, device key(s) and name(s) and defaultdevice can be specified via a dotfile, options or function arguments. * R/pushes.R: Minor correction 2014-10-08 Dirk Eddelbuettel edd@debian.org * R/pushes.R: New (optional) argument 'email' in pbPost * man/pbPost.Rd: Corresponding manual page updates 2014-10-06 Dirk Eddelbuettel edd@debian.org * R/pushes.R: Minor typo correction by Mike Birdgeneau * R/pushes.R: Made file operations silent, minor tweak to docs * R/init.R: Made file operations silent * R/init.R: Also set 'names' option from init file * tests/simpleTests.R: Added two examples for type='link' and type='file' 2014-09-10 Dirk Eddelbuettel edd@debian.org * R/pushes.R: Documentation clarified for 'recipient' option 2014-06-15 Dirk Eddelbuettel edd@debian.org * R/pushes.R: Applied pull request #7 by Mike Birdgeneau which implements pushes of type 'file' * R/init.R: Ditto * R/pushes: Minor postprocessing of pull request * R/init.R: Ditto 2014-06-10 Dirk Eddelbuettel edd@debian.org * R/pushes.R: Rewritten in terms of new argument 'recipients' with the default being sent to all devices; old argument 'deviceind' now deprecated. * R/init.R: New internal helper function .getNames() * R/init.R: The .getDefaultDevice() now defaults to 'zero' implying all devices should be used. 2014-06-07 Dirk Eddelbuettel edd@debian.org * R/devices.R: pgGetDevices() converted to an S3 object with proper print and summary methods for the returned class 'pbDevices' 2014-06-06 Dirk Eddelbuettel edd@debian.org * R/init.R: Applied pull request #3 by Bill Evans * R/push.R: Ditto * R/init.R: Minor tweak using 'defaultdevice' * R/push.R: Ditto 2014-06-05 Dirk Eddelbuettel edd@debian.org * R/init.R: Fixed two more references to pushbutton which should of course have been pushbullet * R/pushes.R: And another one here 2014-06-02 Dirk Eddelbuettel edd@debian.org * DESCRIPTION: Version 0.0.2 * R/init.R: Detect curl binary in PATH at startup * R/pushes.R: Use curl binary identified at startup * R/devices.R: Ditto * .Rbuildignore: Add attic/ directory with file configure and configure.ac which is no longer needed at init.R checks for curl * R/init.R: Package environment is now .pkgenv * tests/simpleTests.R: Ditto 2014-05-27 Dirk Eddelbuettel edd@debian.org * R/pushes.R (pbPost): Added new optional argument 'debug', and minor refactoring in pbPost() making url string a common variable 2014-05-25 Dirk Eddelbuettel edd@debian.org * configure.ac: Added with simple test for curl * configure: Idem * tests/simpleTests.R: Added simple test script * R/init.R: Improved init. with new helper functions 2014-05-24 Dirk Eddelbuettel edd@debian.org * DESCRIPTION: Initial commit as version 0.0.1 * .travis.yml: Added Travis support","title":"2014"},{"location":"news/","text":"Version 0.3.4 (2020-xx-yy) Return code checking using error code content if it exists (Thomas Shafer in #64 ). Enabled GitHub Actions with encrypted JSON file for API access Added a package documentation website Version 0.3.3 (2020-01-18) UTF-8 encoding is now used (Chan-Yub Park in #55 ). Curl can use HTTP/1.1 (Alexandre Shannon in #59 fixing #57 , plus Dirk in #60 making it optional). Version 0.3.2 (2019-07-21) The Travis setup was robustified with respect to the token need to run tests (Dirk in #48 ) The configuration file is now readable only by the user (Colin Gillespie in #50 ) At startup initialization is now more consistent (Colin Gillespie in #53 fixing #52 ) A new function to fetch prior posts was added (Chan-Yub Park in #54 ). Version 0.3.1 (2017-02-17) The target device designation was corrected ( #39 ). Three new (unexported) helper functions test now test the validity of the api key, device and channel (Seth in #41 ). The summary method for the pbDevices class was corrected (Seth in #43 ). New helper functions pbValidateConf , pbGetUser , pbGetChannelInfo were added (Seth in #44 closing #40 ). New classes pbUser and pbChannelInfo were added (Seth in #44 ). Travis CI tests (and [covr]{.pkg} coverage analysis) are now enabled via an encrypted config file ( #45 ). Version 0.3.0 (2017-02-03) The curl binary use was replaced by use of the [curl]{.pkg} package; several new helper functions added (PRs #30 , #36 by Seth closing #29 ) Use of [RJSONIO]{.pkg} was replaced by use of [jsonlite]{.pkg} (PR #32 by Seth closing #31 ) A new function pbSetup was added to aid creating the resource file (PRs #34 , #37 by Seth and Dirk) The package intialization was refactored so that non-loading calls such as RPushbullet::pbPost(...) now work ( #33 closing #26 ) The test suite was updated and extended The Travis script was updated use run.sh DESCRIPTION, README.md and other files were updated for current R CMD check standards Deprecated parts such as \\'type=address\\' were removed, and the documentation was updated accordingly. Coverage support was added (in a \\'on-demand\\' setting as automated runs would need a Pushbullet API token) Version 0.2.0 (2015-02-07) Added support for Pushbullet \\'channels\\' (once again thanks to Mike Birdgeneau for the initial push on this; cf #18 ) Support for pushes was solidified: proper choices of either device, email or channel should work in all cases S3 methods are now properly exports (thanks to Henrik Bengtsson) File transfer mode has been improved / corrected (thanks to Mike Birdgeneau) The regression test suite was expanded and robustified This NEWS file was added. Better late than never. Version 0.1.1 (2014-11-03) Corrections to the file upload method Version 0.1.0 (2014-10-10) Expanded documentation on how to set API keys, device keys and default settings Email support was added Regression tests for types 'link' and 'file' were added. Support for file transfers was added by Mike Birgeneau Initialization was rewritten / solidified Version 0.0.2 (2014-06-02) Improved detection of curl binary at startup Package environment now in .pkgenv Added simple test script Version 0.0.1 (2014-06-02) Initial version","title":"News"},{"location":"news/#version-034-2020-xx-yy","text":"Return code checking using error code content if it exists (Thomas Shafer in #64 ). Enabled GitHub Actions with encrypted JSON file for API access Added a package documentation website","title":"Version 0.3.4 (2020-xx-yy)"},{"location":"news/#version-033-2020-01-18","text":"UTF-8 encoding is now used (Chan-Yub Park in #55 ). Curl can use HTTP/1.1 (Alexandre Shannon in #59 fixing #57 , plus Dirk in #60 making it optional).","title":"Version 0.3.3 (2020-01-18)"},{"location":"news/#version-032-2019-07-21","text":"The Travis setup was robustified with respect to the token need to run tests (Dirk in #48 ) The configuration file is now readable only by the user (Colin Gillespie in #50 ) At startup initialization is now more consistent (Colin Gillespie in #53 fixing #52 ) A new function to fetch prior posts was added (Chan-Yub Park in #54 ).","title":"Version 0.3.2 (2019-07-21)"},{"location":"news/#version-031-2017-02-17","text":"The target device designation was corrected ( #39 ). Three new (unexported) helper functions test now test the validity of the api key, device and channel (Seth in #41 ). The summary method for the pbDevices class was corrected (Seth in #43 ). New helper functions pbValidateConf , pbGetUser , pbGetChannelInfo were added (Seth in #44 closing #40 ). New classes pbUser and pbChannelInfo were added (Seth in #44 ). Travis CI tests (and [covr]{.pkg} coverage analysis) are now enabled via an encrypted config file ( #45 ).","title":"Version 0.3.1 (2017-02-17)"},{"location":"news/#version-030-2017-02-03","text":"The curl binary use was replaced by use of the [curl]{.pkg} package; several new helper functions added (PRs #30 , #36 by Seth closing #29 ) Use of [RJSONIO]{.pkg} was replaced by use of [jsonlite]{.pkg} (PR #32 by Seth closing #31 ) A new function pbSetup was added to aid creating the resource file (PRs #34 , #37 by Seth and Dirk) The package intialization was refactored so that non-loading calls such as RPushbullet::pbPost(...) now work ( #33 closing #26 ) The test suite was updated and extended The Travis script was updated use run.sh DESCRIPTION, README.md and other files were updated for current R CMD check standards Deprecated parts such as \\'type=address\\' were removed, and the documentation was updated accordingly. Coverage support was added (in a \\'on-demand\\' setting as automated runs would need a Pushbullet API token)","title":"Version 0.3.0 (2017-02-03)"},{"location":"news/#version-020-2015-02-07","text":"Added support for Pushbullet \\'channels\\' (once again thanks to Mike Birdgeneau for the initial push on this; cf #18 ) Support for pushes was solidified: proper choices of either device, email or channel should work in all cases S3 methods are now properly exports (thanks to Henrik Bengtsson) File transfer mode has been improved / corrected (thanks to Mike Birdgeneau) The regression test suite was expanded and robustified This NEWS file was added. Better late than never.","title":"Version 0.2.0 (2015-02-07)"},{"location":"news/#version-011-2014-11-03","text":"Corrections to the file upload method","title":"Version 0.1.1 (2014-11-03)"},{"location":"news/#version-010-2014-10-10","text":"Expanded documentation on how to set API keys, device keys and default settings Email support was added Regression tests for types 'link' and 'file' were added. Support for file transfers was added by Mike Birgeneau Initialization was rewritten / solidified","title":"Version 0.1.0 (2014-10-10)"},{"location":"news/#version-002-2014-06-02","text":"Improved detection of curl binary at startup Package environment now in .pkgenv Added simple test script","title":"Version 0.0.2 (2014-06-02)"},{"location":"news/#version-001-2014-06-02","text":"Initial version","title":"Version 0.0.1 (2014-06-02)"},{"location":"man/pbGetChannelInfo/","text":"Details for a channel Description Details for a channel Usage pbGetChannelInfo(channel, no_recent_pushes = FALSE) ## Default S3 method: pbGetChannelInfo(channel, no_recent_pushes = FALSE) ## S3 method for class 'pbChannelInfo' print(x, ...) ## S3 method for class 'pbChannelInfo' summary(object, ...) Arguments Argument Description channel The name of a Pushbullet channel as a string no_recent_pushes Should the returned returned object exclude recent pushs? FALSE (the default) will return up to 10 pushes. TRUE will exclude them x Default object for print method ... Other optional arguments object Default object for summary method Value a list with infoabout a channel Examples xkcd <- pbGetChannelInfo(\"xkcd\", TRUE) summary(xkcd)","title":"pbGetChannelInfo"},{"location":"man/pbGetChannelInfo/#details-for-a-channel","text":"","title":"Details for a channel"},{"location":"man/pbGetChannelInfo/#description","text":"Details for a channel","title":"Description"},{"location":"man/pbGetChannelInfo/#usage","text":"pbGetChannelInfo(channel, no_recent_pushes = FALSE) ## Default S3 method: pbGetChannelInfo(channel, no_recent_pushes = FALSE) ## S3 method for class 'pbChannelInfo' print(x, ...) ## S3 method for class 'pbChannelInfo' summary(object, ...)","title":"Usage"},{"location":"man/pbGetChannelInfo/#arguments","text":"Argument Description channel The name of a Pushbullet channel as a string no_recent_pushes Should the returned returned object exclude recent pushs? FALSE (the default) will return up to 10 pushes. TRUE will exclude them x Default object for print method ... Other optional arguments object Default object for summary method","title":"Arguments"},{"location":"man/pbGetChannelInfo/#value","text":"a list with infoabout a channel","title":"Value"},{"location":"man/pbGetChannelInfo/#examples","text":"xkcd <- pbGetChannelInfo(\"xkcd\", TRUE) summary(xkcd)","title":"Examples"},{"location":"man/pbGetDevices/","text":"Get registered Pushbullet devices Description Retrieve the list of devices registered for the given API key. Usage pbGetDevices(apikey = .getKey()) ## Default S3 method: pbGetDevices(apikey = .getKey()) ## S3 method for class 'pbDevices' print(x, ...) ## S3 method for class 'pbDevices' summary(object, ...) Arguments Argument Description apikey The API key used to access the service. It can be supplied as an argument here, or via the file ~/.rpushbullet.json which is read at package initialization. x Default object for print method ... Other optional arguments object Default object for summary method Details This function invokes the \u2018devices\u2019 functionality of the Pushbullet API; see https://docs.pushbullet.com/v2/devices for more details. Value The resulting JSON record is converted to a list and returned as a pbDevices object with appropriate print and summary methods. Author(s) Dirk Eddelbuettel","title":"pbGetDevices"},{"location":"man/pbGetDevices/#get-registered-pushbullet-devices","text":"","title":"Get registered Pushbullet devices"},{"location":"man/pbGetDevices/#description","text":"Retrieve the list of devices registered for the given API key.","title":"Description"},{"location":"man/pbGetDevices/#usage","text":"pbGetDevices(apikey = .getKey()) ## Default S3 method: pbGetDevices(apikey = .getKey()) ## S3 method for class 'pbDevices' print(x, ...) ## S3 method for class 'pbDevices' summary(object, ...)","title":"Usage"},{"location":"man/pbGetDevices/#arguments","text":"Argument Description apikey The API key used to access the service. It can be supplied as an argument here, or via the file ~/.rpushbullet.json which is read at package initialization. x Default object for print method ... Other optional arguments object Default object for summary method","title":"Arguments"},{"location":"man/pbGetDevices/#details","text":"This function invokes the \u2018devices\u2019 functionality of the Pushbullet API; see https://docs.pushbullet.com/v2/devices for more details.","title":"Details"},{"location":"man/pbGetDevices/#value","text":"The resulting JSON record is converted to a list and returned as a pbDevices object with appropriate print and summary methods.","title":"Value"},{"location":"man/pbGetDevices/#authors","text":"Dirk Eddelbuettel","title":"Author(s)"},{"location":"man/pbGetPosts/","text":"Get messages posted via Pushbullet Description This function gets messages posted to Pushbullet. Usage pbGetPosts(apikey = .getKey(), limit = 10) Arguments Argument Description apikey The API key used to access the service. It can be supplied as an argument here, via the global option rpushbullet.key , or via the file ~/.rpushbullet.json which is read at package initialization (and, if found, also sets the global option). ~/.rpushbullet.json which is read at package initialization. limit Limit number of post. Default is 10. Value A data.frame result record is returned Author(s) Chan-Yub Park Examples ## Not run: pbGetPosts() ## End(Not run)","title":"pbGetPosts"},{"location":"man/pbGetPosts/#get-messages-posted-via-pushbullet","text":"","title":"Get messages posted via Pushbullet"},{"location":"man/pbGetPosts/#description","text":"This function gets messages posted to Pushbullet.","title":"Description"},{"location":"man/pbGetPosts/#usage","text":"pbGetPosts(apikey = .getKey(), limit = 10)","title":"Usage"},{"location":"man/pbGetPosts/#arguments","text":"Argument Description apikey The API key used to access the service. It can be supplied as an argument here, via the global option rpushbullet.key , or via the file ~/.rpushbullet.json which is read at package initialization (and, if found, also sets the global option). ~/.rpushbullet.json which is read at package initialization. limit Limit number of post. Default is 10.","title":"Arguments"},{"location":"man/pbGetPosts/#value","text":"A data.frame result record is returned","title":"Value"},{"location":"man/pbGetPosts/#authors","text":"Chan-Yub Park","title":"Author(s)"},{"location":"man/pbGetPosts/#examples","text":"## Not run: pbGetPosts() ## End(Not run)","title":"Examples"},{"location":"man/pbGetUser/","text":"Get info about a user Description Get info about a user Usage pbGetUser(apikey = .getKey()) ## Default S3 method: pbGetUser(apikey = .getKey()) ## S3 method for class 'pbUser' print(x, ...) ## S3 method for class 'pbUser' summary(object, ...) Arguments Argument Description apikey The API key used to access the service. It can be supplied as an argument here, or via the file ~/.rpushbullet.json which is read at package initialization. x Default object for print method ... Other optional arguments object Default object for summary method Value Invisibly returns info about a user Examples ## Not run: me <- pbGetUser() summary(me) ## End(Not run)","title":"pbGetUser"},{"location":"man/pbGetUser/#get-info-about-a-user","text":"","title":"Get info about a user"},{"location":"man/pbGetUser/#description","text":"Get info about a user","title":"Description"},{"location":"man/pbGetUser/#usage","text":"pbGetUser(apikey = .getKey()) ## Default S3 method: pbGetUser(apikey = .getKey()) ## S3 method for class 'pbUser' print(x, ...) ## S3 method for class 'pbUser' summary(object, ...)","title":"Usage"},{"location":"man/pbGetUser/#arguments","text":"Argument Description apikey The API key used to access the service. It can be supplied as an argument here, or via the file ~/.rpushbullet.json which is read at package initialization. x Default object for print method ... Other optional arguments object Default object for summary method","title":"Arguments"},{"location":"man/pbGetUser/#value","text":"Invisibly returns info about a user","title":"Value"},{"location":"man/pbGetUser/#examples","text":"## Not run: me <- pbGetUser() summary(me) ## End(Not run)","title":"Examples"},{"location":"man/pbPost/","text":"Post a message via Pushbullet Description This function posts a message to Pushbullet. Different types of messages are supported: \u2018note\u2019, \u2018link\u2019, \u2018address\u2019, or \u2018file\u2019. Usage pbPost(type = c(\"note\", \"link\", \"file\"), title = \"\", body = \"\", url = \"\", filetype = \"text/plain\", recipients, email, channel, deviceind, apikey = .getKey(), devices = .getDevices(), verbose = FALSE, debug = FALSE) Arguments Argument Description type The type of post: one of \u2018note\u2019, \u2018link\u2019, or \u2018file\u2019. title The title of the note being posted. body The body of the note or the (optional) body when the type is \u2018link\u2019. url The URL of type is \u2018link\u2019, or the local path of a file to be sent if type is \u2018file\u2019. filetype The MIME type for the file at url (if type is \u2018file\u2019) such as \u201ctext/plain\u201d or \u201cimage/jpeg\u201d, defaults to \u201ctext/plain\u201d. recipients A character or numeric vector indicating the devices this post should go to. If missing, the default device is looked up from an optional setting, and if none has been set the push is sent to all devices. email An alternative way to specify a recipient is to specify an email address. If both recipients and email are present, recipients is used. channel A channel tag used to specify the name of the channel as the recipient. If either recipients or email are present, they will take precedence over channel . deviceind (Deprecated) The index (or a vector/list of indices) of the device(s) in the list of devices. apikey The API key used to access the service. It can be supplied as an argument here, via the global option rpushbullet.key , or via the file ~/.rpushbullet.json which is read at package initialization (and, if found, also sets the global option). devices The device to which this post is pushed. It can be supplied as an argument here, or via the file ~/.rpushbullet.json which is read at package initialization. verbose Boolean switch to add additional output debug Boolean switch to add even more debugging output Details This function invokes the \u2018pushes\u2019 functionality of the Pushbullet API; see https://docs.pushbullet.com/v2/pushes for more details. When a \u2018note\u2019 is pushed, the recipient receives the title and body of the note. If a \u2018link\u2019 is pushed, the recipient's web browser is opened at the given URL. If an \u2018address\u2019 is pushed, the recipient's web browser is opened in map mode at the given address. If \u2018recipients\u2019 argument is missing, the post is pushed to all devices in accordance with the API definition. If \u2018recipients\u2019 is text vector, it matched against the device names (from either the config file or a corresponding option). Lastly, if \u2018recipients\u2019 is a numeric vector, the post is pushed the corresponding elements in the devices vector. In other words, the default of value of no specified recipients results in sending to all devices. If you want a particular subset of devices you have to specify it name or index. A default device can be set in the configuration file, or as a global option. If none is set, zero is used as a code to imply \u2018all\u2019 devices. The earlier argument deviceind is now deprecated and will be removed in a later release. In some cases servers may prefer the older \u2018HTTP 1.1\u2019 standard (as opposed to the newer \u2018HTTP 2.0\u2019 set by curl ). Setting the option \u201crpushbullet.useHTTP11\u201d to TRUE will enable use of \u2018HTTP 1.1\u2019. Value A JSON result record is return invisibly Author(s) Dirk Eddelbuettel Examples ## Not run: # A note pbPost(\"note\", \"A Simple Test\", \"We think this should work.\\nWe really do.\") # A URL -- should open browser pbPost(type=\"link\", title=\"Some title\", body=\"Some URL\", url=\"http://cran.r-project.org/package=RPushbullet\") # A file pbPost(type=\"file\", url=system.file(\"DESCRIPTION\", package=\"RPushbullet\")) ## End(Not run)","title":"pbPost"},{"location":"man/pbPost/#post-a-message-via-pushbullet","text":"","title":"Post a message via Pushbullet"},{"location":"man/pbPost/#description","text":"This function posts a message to Pushbullet. Different types of messages are supported: \u2018note\u2019, \u2018link\u2019, \u2018address\u2019, or \u2018file\u2019.","title":"Description"},{"location":"man/pbPost/#usage","text":"pbPost(type = c(\"note\", \"link\", \"file\"), title = \"\", body = \"\", url = \"\", filetype = \"text/plain\", recipients, email, channel, deviceind, apikey = .getKey(), devices = .getDevices(), verbose = FALSE, debug = FALSE)","title":"Usage"},{"location":"man/pbPost/#arguments","text":"Argument Description type The type of post: one of \u2018note\u2019, \u2018link\u2019, or \u2018file\u2019. title The title of the note being posted. body The body of the note or the (optional) body when the type is \u2018link\u2019. url The URL of type is \u2018link\u2019, or the local path of a file to be sent if type is \u2018file\u2019. filetype The MIME type for the file at url (if type is \u2018file\u2019) such as \u201ctext/plain\u201d or \u201cimage/jpeg\u201d, defaults to \u201ctext/plain\u201d. recipients A character or numeric vector indicating the devices this post should go to. If missing, the default device is looked up from an optional setting, and if none has been set the push is sent to all devices. email An alternative way to specify a recipient is to specify an email address. If both recipients and email are present, recipients is used. channel A channel tag used to specify the name of the channel as the recipient. If either recipients or email are present, they will take precedence over channel . deviceind (Deprecated) The index (or a vector/list of indices) of the device(s) in the list of devices. apikey The API key used to access the service. It can be supplied as an argument here, via the global option rpushbullet.key , or via the file ~/.rpushbullet.json which is read at package initialization (and, if found, also sets the global option). devices The device to which this post is pushed. It can be supplied as an argument here, or via the file ~/.rpushbullet.json which is read at package initialization. verbose Boolean switch to add additional output debug Boolean switch to add even more debugging output","title":"Arguments"},{"location":"man/pbPost/#details","text":"This function invokes the \u2018pushes\u2019 functionality of the Pushbullet API; see https://docs.pushbullet.com/v2/pushes for more details. When a \u2018note\u2019 is pushed, the recipient receives the title and body of the note. If a \u2018link\u2019 is pushed, the recipient's web browser is opened at the given URL. If an \u2018address\u2019 is pushed, the recipient's web browser is opened in map mode at the given address. If \u2018recipients\u2019 argument is missing, the post is pushed to all devices in accordance with the API definition. If \u2018recipients\u2019 is text vector, it matched against the device names (from either the config file or a corresponding option). Lastly, if \u2018recipients\u2019 is a numeric vector, the post is pushed the corresponding elements in the devices vector. In other words, the default of value of no specified recipients results in sending to all devices. If you want a particular subset of devices you have to specify it name or index. A default device can be set in the configuration file, or as a global option. If none is set, zero is used as a code to imply \u2018all\u2019 devices. The earlier argument deviceind is now deprecated and will be removed in a later release. In some cases servers may prefer the older \u2018HTTP 1.1\u2019 standard (as opposed to the newer \u2018HTTP 2.0\u2019 set by curl ). Setting the option \u201crpushbullet.useHTTP11\u201d to TRUE will enable use of \u2018HTTP 1.1\u2019.","title":"Details"},{"location":"man/pbPost/#value","text":"A JSON result record is return invisibly","title":"Value"},{"location":"man/pbPost/#authors","text":"Dirk Eddelbuettel","title":"Author(s)"},{"location":"man/pbPost/#examples","text":"## Not run: # A note pbPost(\"note\", \"A Simple Test\", \"We think this should work.\\nWe really do.\") # A URL -- should open browser pbPost(type=\"link\", title=\"Some title\", body=\"Some URL\", url=\"http://cran.r-project.org/package=RPushbullet\") # A file pbPost(type=\"file\", url=system.file(\"DESCRIPTION\", package=\"RPushbullet\")) ## End(Not run)","title":"Examples"},{"location":"man/pbSetup/","text":"Create a JSON config file Description Create a JSON config file Usage pbSetup(apikey, conffile, defdev) Arguments Argument Description apikey An Access Token provided by Pushbullet (see details). If not provided in the function call, the user will be prompted to enter one. conffile A string giving the path where the configuration file will be written. RPushbullet will automatically attempt load from the default location ~/.rpushbullet.json (which can be changed via a rpushbullet.dotfile ) entry in options ). defdev An optional value for the default device; if missing (or NA ) then an interactive prompt is used. Details This function writes a simple default configuration file based on a given apikey. It is intended to be run once to help new users setup RPushbullet. Running multiple times without overriding the config_file parameter will overwrite the default file. An Access Token may be obtained for free by logging into the Pushbullet website, going to https://www.pushbullet.com/#settings , and clicking on \"Create Access Token\". Value NULL is returned invisibly, but the function is called for its side effect of creating the configuration file. Author(s) Seth Wenchel and Dirk Eddelbuettel Examples ## Not run: # Interactive mode. Just follow the prompts. pbSetup() ## End(Not run)","title":"pbSetup"},{"location":"man/pbSetup/#create-a-json-config-file","text":"","title":"Create a JSON config file"},{"location":"man/pbSetup/#description","text":"Create a JSON config file","title":"Description"},{"location":"man/pbSetup/#usage","text":"pbSetup(apikey, conffile, defdev)","title":"Usage"},{"location":"man/pbSetup/#arguments","text":"Argument Description apikey An Access Token provided by Pushbullet (see details). If not provided in the function call, the user will be prompted to enter one. conffile A string giving the path where the configuration file will be written. RPushbullet will automatically attempt load from the default location ~/.rpushbullet.json (which can be changed via a rpushbullet.dotfile ) entry in options ). defdev An optional value for the default device; if missing (or NA ) then an interactive prompt is used.","title":"Arguments"},{"location":"man/pbSetup/#details","text":"This function writes a simple default configuration file based on a given apikey. It is intended to be run once to help new users setup RPushbullet. Running multiple times without overriding the config_file parameter will overwrite the default file. An Access Token may be obtained for free by logging into the Pushbullet website, going to https://www.pushbullet.com/#settings , and clicking on \"Create Access Token\".","title":"Details"},{"location":"man/pbSetup/#value","text":"NULL is returned invisibly, but the function is called for its side effect of creating the configuration file.","title":"Value"},{"location":"man/pbSetup/#authors","text":"Seth Wenchel and Dirk Eddelbuettel","title":"Author(s)"},{"location":"man/pbSetup/#examples","text":"## Not run: # Interactive mode. Just follow the prompts. pbSetup() ## End(Not run)","title":"Examples"},{"location":"man/pbValidateConf/","text":"Check if a configuration is valid Description Check if a configuration is valid Usage pbValidateConf(conf = NULL) Arguments Argument Description conf Either a file path (like ~/.rpushbullet.json ) or a JSON string. If NULL (the default), the value of getOption(\"rpushbullet.dotfile\") will be used. Value TRUE if both the api key and all devices are vaild. FALSE otherwise. Examples pbValidateConf('{\"key\":\"a_fake_key\",\"devices\":[\"dev_iden1\",\"dev_iden2\"]}')","title":"pbValidateConf"},{"location":"man/pbValidateConf/#check-if-a-configuration-is-valid","text":"","title":"Check if a configuration is valid"},{"location":"man/pbValidateConf/#description","text":"Check if a configuration is valid","title":"Description"},{"location":"man/pbValidateConf/#usage","text":"pbValidateConf(conf = NULL)","title":"Usage"},{"location":"man/pbValidateConf/#arguments","text":"Argument Description conf Either a file path (like ~/.rpushbullet.json ) or a JSON string. If NULL (the default), the value of getOption(\"rpushbullet.dotfile\") will be used.","title":"Arguments"},{"location":"man/pbValidateConf/#value","text":"TRUE if both the api key and all devices are vaild. FALSE otherwise.","title":"Value"},{"location":"man/pbValidateConf/#examples","text":"pbValidateConf('{\"key\":\"a_fake_key\",\"devices\":[\"dev_iden1\",\"dev_iden2\"]}')","title":"Examples"},{"location":"man/rpushbullet-package/","text":"R interface to the Pushbullet service Description The Pushbullet service permits users to pass messenges between their computers, phones and other devices such as tablets. It offers immediacy which is perfect for alerting, and much more. This package provides a programmatic interface from R. Details The Pushbullet API offers a RESTful interface which requires an API key. A key can be obtained free of charge from Pushbullet . Given such a key, and one or more registered devices, users can push messages to one or more device, or a given email address. The main function is pbPost which can be used to send a message comprising a note (with free-form body and title), link (for sending a URL), or even a file. The message recipients is typically one (or several) of the devices known to the user (see the next section for details), it can also be an email address in which case Pushbullet creates and sends an email to the given address. Initialization The authentication key, as well as the device id, nicknames for the devices and default device can all be declared in several ways. One possibility is to use a file .rpushbullet.json in the $HOME directory. (Note that on Windows you may have to set the $HOME environment variable.) It uses the JSON format which uses a key:value pair notation; values may be arrays. A simple example follows. { \"key\": \"abc...YourKeyHereBetweenQuote....xyz\", \"devices\": [ \"abc...SomeId.......xyz\", \"abc...SomeOtherId..xyz\" ], \"names\": [ \"Phone\", \"Browser\" ], \"defaultdevice\": \"Phone\" } The entire block is delimited by a pair of curly braces. Within the curly braces we have \u201ckey\u201d and \u201cdevices\u201d which are mandatory. Here \u201ckey\u201d is expected to contain a single value; \u201cdevices\u201d can be an array which is denoted by square brackets. Optionally a \u201cnames\u201d single value or array can be used to assign nicknames to the devices. Lastly, a \u201cdefaultdevice\u201d can be designated as well. However, use of a configuration file is not mandatory. The arguments can also be supplied as global options (which could be done in the usual R startup files, see Startup for details) as well as via standard function arguments when calling the corresponding functions. When using global options, use the names rpushbullet.key , rpushbullet.devices , rpushbullet.names , and rpushbullet.defaultdevice corresponding to the entries in the JSON file shown above. The curl binary is required, and is located at package initialization, along with the other load-time intializations described here. It is therefore strongly recommended to attach the package in the normal way via library(RPushbullet) rather than trying to access functions from the package namespace. Author(s) Dirk Eddelbuettel References See the Pushbullet documentation at the Pushbullet website . See Also The documentation for the main function pbPost , as well as the documentation for pbGetDevices .","title":"Rpushbullet package"},{"location":"man/rpushbullet-package/#r-interface-to-the-pushbullet-service","text":"","title":"R interface to the Pushbullet service"},{"location":"man/rpushbullet-package/#description","text":"The Pushbullet service permits users to pass messenges between their computers, phones and other devices such as tablets. It offers immediacy which is perfect for alerting, and much more. This package provides a programmatic interface from R.","title":"Description"},{"location":"man/rpushbullet-package/#details","text":"The Pushbullet API offers a RESTful interface which requires an API key. A key can be obtained free of charge from Pushbullet . Given such a key, and one or more registered devices, users can push messages to one or more device, or a given email address. The main function is pbPost which can be used to send a message comprising a note (with free-form body and title), link (for sending a URL), or even a file. The message recipients is typically one (or several) of the devices known to the user (see the next section for details), it can also be an email address in which case Pushbullet creates and sends an email to the given address.","title":"Details"},{"location":"man/rpushbullet-package/#initialization","text":"The authentication key, as well as the device id, nicknames for the devices and default device can all be declared in several ways. One possibility is to use a file .rpushbullet.json in the $HOME directory. (Note that on Windows you may have to set the $HOME environment variable.) It uses the JSON format which uses a key:value pair notation; values may be arrays. A simple example follows. { \"key\": \"abc...YourKeyHereBetweenQuote....xyz\", \"devices\": [ \"abc...SomeId.......xyz\", \"abc...SomeOtherId..xyz\" ], \"names\": [ \"Phone\", \"Browser\" ], \"defaultdevice\": \"Phone\" } The entire block is delimited by a pair of curly braces. Within the curly braces we have \u201ckey\u201d and \u201cdevices\u201d which are mandatory. Here \u201ckey\u201d is expected to contain a single value; \u201cdevices\u201d can be an array which is denoted by square brackets. Optionally a \u201cnames\u201d single value or array can be used to assign nicknames to the devices. Lastly, a \u201cdefaultdevice\u201d can be designated as well. However, use of a configuration file is not mandatory. The arguments can also be supplied as global options (which could be done in the usual R startup files, see Startup for details) as well as via standard function arguments when calling the corresponding functions. When using global options, use the names rpushbullet.key , rpushbullet.devices , rpushbullet.names , and rpushbullet.defaultdevice corresponding to the entries in the JSON file shown above. The curl binary is required, and is located at package initialization, along with the other load-time intializations described here. It is therefore strongly recommended to attach the package in the normal way via library(RPushbullet) rather than trying to access functions from the package namespace.","title":"Initialization"},{"location":"man/rpushbullet-package/#authors","text":"Dirk Eddelbuettel","title":"Author(s)"},{"location":"man/rpushbullet-package/#references","text":"See the Pushbullet documentation at the Pushbullet website .","title":"References"},{"location":"man/rpushbullet-package/#see-also","text":"The documentation for the main function pbPost , as well as the documentation for pbGetDevices .","title":"See Also"}]}